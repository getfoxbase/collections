{"version":3,"sources":["../../src/CollectionTypes/DocumentsLive.js"],"names":["DocumentsLive","Documents","constructor","name","configuration","findById","id","query","driver","getPrimaryKeyName","formatPrimaryKey","docData","findOne","Model","formatOut","find","documents","ret","doc","push","updateById","data","setMany","save","deleteById","delete"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,MAAMA,aAAN,SAA4BC,kBAA5B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,IAAD,EAAOC,aAAP,EAAsB;AAC7B,UAAMD,IAAN,EAAYC,aAAZ;AACH;;AAEKC,EAAAA,QAAQ,CAACC,EAAD,EAAK;AAAA;;AAAA;AACf,YAAMC,KAAK,GAAG,EAAd;AACAA,MAAAA,KAAK,CAAC,KAAI,CAACC,MAAL,CAAYC,iBAAZ,EAAD,CAAL,GAAyC,KAAI,CAACD,MAAL,CAAYE,gBAAZ,CAA6BJ,EAA7B,CAAzC;AAEA,YAAMK,OAAO,SAAS,KAAI,CAACH,MAAL,CAAYI,OAAZ,CAAoB,KAAI,CAACT,IAAzB,EAA+BI,KAA/B,CAAtB;;AACA,UAAI,CAACI,OAAL,EAAc;AACV,eAAO,IAAP;AACH;;AAED,aAAO,IAAIE,cAAJ,CAAU,KAAV,QAAsB,KAAI,CAACC,SAAL,CAAeH,OAAf,CAAtB,CAAP;AATe;AAUlB;;AAEKI,EAAAA,IAAI,CAACR,KAAK,GAAG,EAAT,EAAa;AAAA;;AAAA;AACnB,YAAMS,SAAS,SAAS,MAAI,CAACR,MAAL,CAAYO,IAAZ,CAAiB,MAAI,CAACZ,IAAtB,EAA4BI,KAA5B,CAAxB;AACA,YAAMU,GAAG,GAAG,EAAZ;;AAEA,WAAK,IAAIC,GAAT,IAAgBF,SAAhB,EAA2B;AACvBC,QAAAA,GAAG,CAACE,IAAJ,CAAS,IAAIN,cAAJ,CAAU,MAAV,QAAsB,MAAI,CAACC,SAAL,CAAeI,GAAf,CAAtB,CAAT;AACH;;AAED,aAAOD,GAAP;AARmB;AAStB;;AAEKG,EAAAA,UAAU,CAACd,EAAD,EAAKe,IAAL,EAAW;AAAA;;AAAA;AACvB,YAAMH,GAAG,SAAS,MAAI,CAACb,QAAL,CAAcC,EAAd,CAAlB;;AACA,UAAIY,GAAG,KAAK,IAAZ,EAAkB;AACd,eAAO,KAAP;AACH;;AAEDA,MAAAA,GAAG,CAACI,OAAJ,CAAYD,IAAZ;AACA,YAAMH,GAAG,CAACK,IAAJ,EAAN;AAEA,aAAO,IAAP;AATuB;AAU1B;;AAEKC,EAAAA,UAAU,CAAClB,EAAD,EAAK;AAAA;;AAAA;AACjB,YAAMY,GAAG,SAAS,MAAI,CAACb,QAAL,CAAcC,EAAd,CAAlB;;AACA,UAAIY,GAAG,KAAK,IAAZ,EAAkB;AACd,eAAO,KAAP;AACH;;AAED,YAAMA,GAAG,CAACO,MAAJ,EAAN;AACA,aAAO,IAAP;AAPiB;AAQpB;;AAhDgD","sourcesContent":["import Model from '../Model'\r\nimport Documents from './Documents'\r\n\r\nexport default class DocumentsLive extends Documents {\r\n    constructor(name, configuration) {\r\n        super(name, configuration)\r\n    }\r\n\r\n    async findById(id) {\r\n        const query = {}\r\n        query[this.driver.getPrimaryKeyName()] = this.driver.formatPrimaryKey(id)\r\n        \r\n        const docData = await this.driver.findOne(this.name, query)\r\n        if (!docData) {\r\n            return null\r\n        }\r\n\r\n        return new Model(this, await this.formatOut(docData))\r\n    }\r\n\r\n    async find(query = {}) {\r\n        const documents = await this.driver.find(this.name, query)\r\n        const ret = []\r\n\r\n        for (let doc of documents) {\r\n            ret.push(new Model(this, await this.formatOut(doc)))\r\n        }\r\n        \r\n        return ret\r\n    }\r\n\r\n    async updateById(id, data) {\r\n        const doc = await this.findById(id)\r\n        if (doc === null) {\r\n            return false\r\n        }\r\n\r\n        doc.setMany(data)\r\n        await doc.save()\r\n\r\n        return true\r\n    }\r\n\r\n    async deleteById(id) {\r\n        const doc = await this.findById(id)\r\n        if (doc === null) {\r\n            return false\r\n        }\r\n\r\n        await doc.delete()\r\n        return true\r\n    }\r\n}"],"file":"DocumentsLive.js"}