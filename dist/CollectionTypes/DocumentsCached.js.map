{"version":3,"sources":["../../src/CollectionTypes/DocumentsCached.js"],"names":["DocumentsCached","Documents","constructor","name","configuration","cached","cache","loadCache","documents","driver","find","doc","push","Model","formatOut","removeFromCache","id","idx","findIndex","splice","addToCache","findById","findByTags","tags","query","updateById","data","deleteById","create"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,MAAMA,eAAN,SAA8BC,kBAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,IAAD,EAAOC,aAAP,EAAsB;AAC7B,UAAMD,IAAN,EAAYC,aAAZ;AAEA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL;AACH;;AAEKA,EAAAA,SAAS,GAAG;AAAA;;AAAA;AACd,YAAMC,SAAS,SAAS,KAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiB,KAAI,CAACP,IAAtB,EAA4B,EAA5B,CAAxB;AACA,MAAA,KAAI,CAACG,KAAL,GAAa,EAAb;;AACA,WAAK,IAAIK,GAAT,IAAgBH,SAAhB,EAA2B;AACvB,QAAA,KAAI,CAACF,KAAL,CAAWM,IAAX,CAAgB,IAAIC,cAAJ,CAAU,KAAI,CAACV,IAAf,QAA2B,KAAI,CAACW,SAAL,CAAeH,GAAf,CAA3B,EAAgD,KAAI,CAACF,MAArD,CAAhB;AACH;AALa;AAMjB;;AAEDM,EAAAA,eAAe,CAACC,EAAD,EAAK;AAChB,UAAMC,GAAG,GAAG,KAAKX,KAAL,CAAWY,SAAX,CAAqBP,GAAG,IAAIA,GAAG,CAACK,EAAJ,IAAUA,EAAtC,CAAZ;AACA,QAAIC,GAAG,KAAK,CAAC,CAAb,EACI,KAAKX,KAAL,CAAWa,MAAX,CAAkBF,GAAlB,EAAuB,CAAvB;AACP;;AAEDG,EAAAA,UAAU,CAACT,GAAD,EAAM;AACZ,SAAKL,KAAL,CAAWM,IAAX,CAAgBD,GAAhB;AACH;;AAEKU,EAAAA,QAAQ,CAACL,EAAD,EAAK;AAAA;AAElB;;AAEKM,EAAAA,UAAU,CAACC,IAAD,EAAO;AAAA;AAEtB;;AAEKb,EAAAA,IAAI,CAACc,KAAD,EAAQ;AAAA;AAEjB;;AAEKC,EAAAA,UAAU,CAACT,EAAD,EAAKU,IAAL,EAAW;AAAA;AAE1B;;AAEKC,EAAAA,UAAU,CAACX,EAAD,EAAK;AAAA;AAEpB;;AAEKY,EAAAA,MAAM,CAACF,IAAD,EAAO;AAAA;AAElB;;AAjDkD","sourcesContent":["import Documents from './Documents'\r\nimport Model from '../Model'\r\n\r\nexport default class DocumentsCached extends Documents {\r\n    constructor(name, configuration) {\r\n        super(name, configuration)\r\n\r\n        this.cached = true\r\n        this.cache = []\r\n        this.loadCache()\r\n    }\r\n\r\n    async loadCache() {\r\n        const documents = await this.driver.find(this.name, {})\r\n        this.cache = []\r\n        for (let doc of documents) {\r\n            this.cache.push(new Model(this.name, await this.formatOut(doc), this.driver))\r\n        }\r\n    }\r\n\r\n    removeFromCache(id) {\r\n        const idx = this.cache.findIndex(doc => doc.id == id)\r\n        if (idx !== -1)\r\n            this.cache.splice(idx, 1)\r\n    }\r\n\r\n    addToCache(doc) {\r\n        this.cache.push(doc)\r\n    }\r\n\r\n    async findById(id) {\r\n        \r\n    }\r\n\r\n    async findByTags(tags) {\r\n        \r\n    }\r\n\r\n    async find(query) {\r\n        \r\n    }\r\n\r\n    async updateById(id, data) {\r\n        \r\n    }\r\n\r\n    async deleteById(id) {\r\n        \r\n    }\r\n\r\n    async create(data) {\r\n        \r\n    }\r\n}"],"file":"DocumentsCached.js"}