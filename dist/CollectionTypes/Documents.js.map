{"version":3,"sources":["../../src/CollectionTypes/Documents.js"],"names":["Documents","Collection","constructor","name","configuration","cached","formatIn","input","fields","ret","key","field","entries","value","default","isArray","Array","filter","a","newVal","val","type","push","nullable","Error","formatOut","doc","withId","id","driver","getPrimaryKey"],"mappings":"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","sourcesContent":["import Collection from '../Collection'\r\n\r\nexport default class Documents extends Collection {\r\n    constructor(name, configuration) {\r\n        super(name, configuration)\r\n\r\n        this.cached = false\r\n    }\r\n\r\n    async formatIn(input, fields = null) {\r\n        if (fields === null) {\r\n            fields = this.fields ?? {}\r\n        }\r\n\r\n        let ret = {}\r\n\r\n        for (const [key, field] of fields.entries()) {\r\n            let value = input[key] ?? field.default ?? null\r\n\r\n            if (field.isArray && value instanceof Array === false) {\r\n                value = [value].filter(a => a !== null)\r\n            }\r\n\r\n            if (field.isArray) {\r\n                let newVal = []\r\n                for (let val of value) {\r\n                    val = await field.type.formatIn(val, field, this)\r\n                    if (val !== null)\r\n                        newVal.push(val)\r\n                }\r\n                value = newVal\r\n            } else {\r\n                value = await field.type.formatIn(value, field, this)\r\n\r\n                if (value === null && !field.nullable) {\r\n                    throw new Error(`Missing value for \"${key}\" in the \"${this.name}\" collection.`)\r\n                }\r\n            }\r\n\r\n            ret[key] = value\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    async formatOut(doc, fields = null, withId = true) {\r\n        if (fields === null) {\r\n            fields = this.fields ?? {}\r\n        }\r\n\r\n        let ret = {}\r\n        if (withId)\r\n            ret.id = this.driver.getPrimaryKey(doc)\r\n\r\n        for (const [key, field] of fields.entries()) {\r\n            let value = doc[key] ?? null\r\n\r\n            if (field.isArray && value instanceof Array === false) {\r\n                value = [value].filter(a => a !== null)\r\n            }\r\n\r\n            if (field.isArray) {\r\n                let newVal = []\r\n                for (let val of value) {\r\n                    val = await field.type.formatOut(val, field, this)\r\n                    if (val !== null)\r\n                        newVal.push(val)\r\n                }\r\n                value = newVal\r\n            } else {\r\n                value = await field.type.formatOut(value, field, this)\r\n            }\r\n\r\n            ret[key] = value\r\n        }\r\n\r\n        return ret\r\n    }\r\n}"],"file":"Documents.js"}