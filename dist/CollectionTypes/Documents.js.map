{"version":3,"sources":["../../src/CollectionTypes/Documents.js"],"names":["Documents","Collection","constructor","name","configuration","formatIn","input","ret","key","field","fields","entries","value","default","isArray","Array","filter","a","map","val","type","nullable","Error","formatOut","doc","id","driver","getPrimaryKey"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,SAAN,SAAwBC,mBAAxB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,IAAD,EAAOC,aAAP,EAAsB;AAC7B,UAAMD,IAAN,EAAYC,aAAZ;AACH;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,QAAIC,GAAG,GAAG,EAAV;;AAEA,SAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2B,iBAAC,KAAKC,MAAN,uDAAgB,EAAhB,EAAoBC,OAApB,EAA3B,EAA0D;AAAA;;AACtD,UAAIC,KAAK,yBAAGN,KAAK,CAACE,GAAD,CAAR,mDAAiBC,KAAK,CAACI,OAAvB,uCAAkC,IAA3C;;AAEA,UAAIJ,KAAK,CAACK,OAAN,IAAiBF,KAAK,YAAYG,KAAjB,KAA2B,KAAhD,EAAuD;AACnDH,QAAAA,KAAK,GAAG,CAACA,KAAD,EAAQI,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAK,IAA1B,CAAR;AACH;;AAED,UAAIR,KAAK,CAACK,OAAV,EAAmB;AACfF,QAAAA,KAAK,CACAM,GADL,CACSC,GAAG,IAAIV,KAAK,CAACW,IAAN,CAAWf,QAAX,CAAoBc,GAApB,CADhB,EAEKH,MAFL,CAEYG,GAAG,IAAIA,GAAG,KAAK,IAF3B;AAGH,OAJD,MAIO;AACHP,QAAAA,KAAK,GAAGH,KAAK,CAACW,IAAN,CAAWf,QAAX,CAAoBO,KAApB,CAAR;;AAEA,YAAIA,KAAK,KAAK,IAAV,IAAkB,CAACH,KAAK,CAACY,QAA7B,EAAuC;AACnC,gBAAM,IAAIC,KAAJ,CAAW,sBAAqBd,GAAI,aAAY,KAAKL,IAAK,eAA1D,CAAN;AACH;AACJ;;AAEDI,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWI,KAAX;AACH;;AAED,WAAOL,GAAP;AACH;;AAEDgB,EAAAA,SAAS,CAACC,GAAD,EAAM;AACX,QAAIjB,GAAG,GAAG;AACNkB,MAAAA,EAAE,EAAE,KAAKC,MAAL,CAAYC,aAAZ,CAA0BH,GAA1B;AADE,KAAV;;AAIA,SAAK,MAAM,CAAChB,GAAD,EAAMC,KAAN,CAAX,IAA2B,kBAAC,KAAKC,MAAN,yDAAgB,EAAhB,EAAoBC,OAApB,EAA3B,EAA0D;AAAA;;AACtD,UAAIC,KAAK,eAAGY,GAAG,CAAChB,GAAD,CAAN,+CAAe,IAAxB;;AAEA,UAAIC,KAAK,CAACK,OAAN,IAAiBF,KAAK,YAAYG,KAAjB,KAA2B,KAAhD,EAAuD;AACnDH,QAAAA,KAAK,GAAG,CAACA,KAAD,EAAQI,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAK,IAA1B,CAAR;AACH;;AAED,UAAIR,KAAK,CAACK,OAAV,EAAmB;AACfF,QAAAA,KAAK,CACAM,GADL,CACSC,GAAG,IAAIV,KAAK,CAACW,IAAN,CAAWG,SAAX,CAAqBJ,GAArB,CADhB,EAEKH,MAFL,CAEYG,GAAG,IAAIA,GAAG,KAAK,IAF3B;AAGH,OAJD,MAIO;AACHP,QAAAA,KAAK,GAAGH,KAAK,CAACW,IAAN,CAAWG,SAAX,CAAqBX,KAArB,CAAR;AACH;;AAEDL,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWI,KAAX;AACH;;AAED,WAAOL,GAAP;AACH;;AAzD6C","sourcesContent":["import Collection from '../Collection'\r\n\r\nexport default class Documents extends Collection {\r\n    constructor(name, configuration) {\r\n        super(name, configuration)\r\n    }\r\n\r\n    formatIn(input) {\r\n        let ret = {}\r\n\r\n        for (const [key, field] of (this.fields ?? {}).entries()) {\r\n            let value = input[key] ?? field.default ?? null\r\n\r\n            if (field.isArray && value instanceof Array === false) {\r\n                value = [value].filter(a => a !== null)\r\n            }\r\n\r\n            if (field.isArray) {\r\n                value\r\n                    .map(val => field.type.formatIn(val))\r\n                    .filter(val => val !== null)\r\n            } else {\r\n                value = field.type.formatIn(value)\r\n\r\n                if (value === null && !field.nullable) {\r\n                    throw new Error(`Missing value for \"${key}\" in the \"${this.name}\" collection.`)\r\n                }\r\n            }\r\n\r\n            ret[key] = value\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    formatOut(doc) {\r\n        let ret = {\r\n            id: this.driver.getPrimaryKey(doc),\r\n        }\r\n\r\n        for (const [key, field] of (this.fields ?? {}).entries()) {\r\n            let value = doc[key] ?? null\r\n\r\n            if (field.isArray && value instanceof Array === false) {\r\n                value = [value].filter(a => a !== null)\r\n            }\r\n\r\n            if (field.isArray) {\r\n                value\r\n                    .map(val => field.type.formatOut(val))\r\n                    .filter(val => val !== null)\r\n            } else {\r\n                value = field.type.formatOut(value)\r\n            }\r\n\r\n            ret[key] = value\r\n        }\r\n\r\n        return ret\r\n    }\r\n}"],"file":"Documents.js"}