{"version":3,"sources":["../../src/Types/LatLng.js"],"names":["LatLngType","Type","formatIn","value","split","map","v","Float","lat","lng","formatOut"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,MAAMA,UAAN,SAAyBC,aAAzB,CAA8B;AAC1B,SAARC,QAAQ,CAACC,KAAD,EAAQ;AAClB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC5BA,MAAAA,KAAK,GAAGA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqBC,CAAC,IAAIC,eAAML,QAAN,CAAeI,CAAf,CAA1B,CAAR;AACAH,MAAAA,KAAK,GAAG;AACJK,QAAAA,GAAG,EAAEL,KAAK,CAAC,CAAD,CADN;AAEJM,QAAAA,GAAG,EAAEN,KAAK,CAAC,CAAD;AAFN,OAAR;AAIH;;AACD,WAAOA,KAAP;AACH;;AAEe,SAATO,SAAS,CAACP,KAAD,EAAQ;AACpB,WAAOA,KAAP;AACH;;AAdwC","sourcesContent":["import Type from '../Type'\r\nimport Float from './Float'\r\n\r\nexport default class LatLngType extends Type {\r\n    static formatIn(value) {\r\n         if (typeof value === 'string') {\r\n            value = value.split(',').map(v => Float.formatIn(v))\r\n            value = {\r\n                lat: value[0],\r\n                lng: value[1]\r\n            }\r\n        }\r\n        return value\r\n    }\r\n\r\n    static formatOut(value) {\r\n        return value\r\n    }\r\n}"],"file":"LatLng.js"}