{"version":3,"sources":["../../src/Types/LatLng.js"],"names":["LatLngType","Type","formatIn","value","field","split","map","v","Float","lat","lng","formatOut"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,MAAMA,UAAN,SAAyBC,aAAzB,CAA8B;AAC1B,SAARC,QAAQ,CAACC,KAAD,EAAQC,KAAR,EAAe;AACzB,QAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC5BA,MAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqBC,CAAC,IAAIC,eAAMN,QAAN,CAAeK,CAAf,CAA1B,CAAR;AACAJ,MAAAA,KAAK,GAAG;AACJM,QAAAA,GAAG,EAAEN,KAAK,CAAC,CAAD,CADN;AAEJO,QAAAA,GAAG,EAAEP,KAAK,CAAC,CAAD;AAFN,OAAR;AAIH;;AACD,WAAOA,KAAP;AACH;;AAEe,SAATQ,SAAS,CAACR,KAAD,EAAQC,KAAR,EAAe;AAC3B,WAAOD,KAAP;AACH;;AAdwC","sourcesContent":["import Type from '../Type'\r\nimport Float from './Float'\r\n\r\nexport default class LatLngType extends Type {\r\n    static formatIn(value, field) {\r\n         if (typeof value === 'string') {\r\n            value = value.split(',').map(v => Float.formatIn(v))\r\n            value = {\r\n                lat: value[0],\r\n                lng: value[1]\r\n            }\r\n        }\r\n        return value\r\n    }\r\n\r\n    static formatOut(value, field) {\r\n        return value\r\n    }\r\n}"],"file":"LatLng.js"}