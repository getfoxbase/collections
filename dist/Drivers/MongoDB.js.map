{"version":3,"sources":["../../src/Drivers/MongoDB.js"],"names":["MongoDB","Driver","constructor","opts","client","MongoClient","dsn","keepAlive","appName","options","db","init","connect","destroy","close","find","collectionName","query","cursor","collection","toArray","findOne","doc","insert","insertOne","update","ret","updateMany","$set","modifiedCount","delete","deleteMany","deletedCount","getPrimaryKey","_id","undefined","toHexString","formatPrimaryKey","id","ObjectId","createFromHexString","getPrimaryKeyName"],"mappings":"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","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\r\nimport Driver from '../Driver'\r\n\r\nexport default class MongoDB extends Driver {\r\n    constructor(opts) {\r\n        super(opts)\r\n\r\n        this.client = new MongoClient(opts.dsn, {\r\n            keepAlive: true,\r\n            appName: 'foxbase',\r\n            ...(opts.options ?? {})\r\n        })\r\n        this.db = null\r\n    }\r\n\r\n    async init() {\r\n        if (this.db !== null) {\r\n            return\r\n        }\r\n        await this.client.connect()\r\n        this.db = this.client.db(this.opts.db)\r\n    }\r\n\r\n    async destroy() {\r\n        await this.client.close()\r\n    }\r\n\r\n    async find(collectionName, query) {\r\n        await this.init()\r\n\r\n        const cursor = this.db.collection(collectionName).find(query)\r\n        return await cursor.toArray()\r\n    }\r\n\r\n    async findOne(collectionName, query) {\r\n        await this.init()\r\n\r\n        const doc = this.db.collection(collectionName).findOne(query)\r\n        return doc ?? null\r\n    }\r\n\r\n    async insert(collectionName, doc) {\r\n        await this.init()\r\n\r\n        this.db.collection(collectionName).insertOne(doc)\r\n\r\n        return doc\r\n    }\r\n\r\n    async update(collectionName, query, update) {\r\n        await this.init()\r\n\r\n        const ret = await this.db.collection(collectionName).updateMany(query, {\r\n            $set: update\r\n        })\r\n\r\n        return ret.modifiedCount\r\n    }\r\n\r\n    async delete(collectionName, query) {\r\n        await this.init()\r\n\r\n        const ret = await this.db.collection(collectionName).deleteMany(query)\r\n\r\n        return ret.deletedCount\r\n    }\r\n\r\n    getPrimaryKey(doc) {\r\n        if (doc._id === undefined)\r\n            return null\r\n        return doc._id.toHexString()\r\n    }\r\n\r\n    formatPrimaryKey(id) {\r\n        return ObjectId.createFromHexString(id)\r\n    }\r\n\r\n    getPrimaryKeyName() {\r\n        return '_id'\r\n    }\r\n}"],"file":"MongoDB.js"}