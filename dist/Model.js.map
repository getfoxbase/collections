{"version":3,"sources":["../src/Model.js"],"names":["Model","constructor","collectionName","data","driver","id","getCollection","Collection","get","key","defaultValue","set","value","setMany","o","matches","query","save","collection","getPrimaryKeyName","formatPrimaryKey","ret","update","formatIn","insert","getPrimaryKey","cached","addToCache","delete","removeFromCache"],"mappings":"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","sourcesContent":["import sift from 'sift'\r\nimport Collection from \"./Collection\"\r\n\r\nexport default class Model {\r\n    constructor(collectionName, data, driver) {\r\n        this.driver = driver\r\n        this.collectionName = collectionName\r\n        this.data = data\r\n        this.id = data.id ?? null\r\n    }\r\n\r\n    getCollection() {\r\n        return Collection.get(this.collectionName)\r\n    }\r\n\r\n    get(key, defaultValue = null) {\r\n        return this.data[key] ?? defaultValue\r\n    }\r\n\r\n    set(key, value) {\r\n        this.data[key] = value\r\n        return this\r\n    }\r\n\r\n    setMany(o) {\r\n        for (let key in o)\r\n            this.data[key] = o[key]\r\n        return this\r\n    }\r\n\r\n    matches(query = {}) {\r\n        return sift(query)(this.data)\r\n    }\r\n\r\n    async save() {\r\n        const collection = Collection.get(this.collectionName)\r\n\r\n        if (this.id !== null) { // Update\r\n            const query = {}\r\n            query[this.driver.getPrimaryKeyName()] = this.driver.formatPrimaryKey(this.id)\r\n            const ret = await this.driver.update(\r\n                this.collectionName,\r\n                query,\r\n                await collection.formatIn(this.data)\r\n            )\r\n        } else { // Insert\r\n            const ret = await this.driver.insert(\r\n                this.collectionName,\r\n                await collection.formatIn(this.data)\r\n            )\r\n            this.id = this.driver.getPrimaryKey(ret)\r\n            this.data.id = this.id\r\n\r\n            if (collection.cached)\r\n                collection.addToCache(this)\r\n        }\r\n        \r\n        return true\r\n    }\r\n\r\n    async delete() {\r\n        if (this.id === null)\r\n            return false\r\n        \r\n        const query = {}\r\n        query[this.driver.getPrimaryKeyName()] = this.driver.formatPrimaryKey(this.id)\r\n\r\n        const collection = this.getCollection()\r\n        const ret = await this.driver.delete(\r\n            this.collectionName,\r\n            query\r\n        )\r\n\r\n        if (collection.cached)\r\n            collection.removeFromCache(this.id)\r\n        \r\n        this.id = null\r\n        return ret\r\n    }\r\n}"],"file":"Model.js"}