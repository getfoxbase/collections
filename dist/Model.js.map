{"version":3,"sources":["../src/Model.js"],"names":["Model","constructor","collection","data","driver","id","getCollection","get","key","defaultValue","Dot","set","value","setMany","o","matches","query","export","save","getPrimaryKeyName","formatPrimaryKey","ret","update","name","formatIn","insert","getPrimaryKey","addToCache","delete","removeFromCache"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,MAAMA,KAAN,CAAY;AACvBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,IAAb,EAAmB;AAAA;;AAC1B,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKE,MAAL,GAAcF,UAAU,CAACE,MAAzB;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKE,EAAL,eAAUF,IAAI,CAACE,EAAf,+CAAqB,IAArB;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKJ,UAAZ;AACH;;AAEDK,EAAAA,GAAG,CAACC,GAAD,EAAMC,YAAY,GAAG,IAArB,EAA2B;AAAA;;AAC1B,uBAAOC,aAAIH,GAAJ,CAAQ,KAAKJ,IAAb,EAAmBK,GAAnB,CAAP,+CAAkCC,YAAlC;AACH;;AAEDE,EAAAA,GAAG,CAACH,GAAD,EAAMI,KAAN,EAAa;AACZF,iBAAIC,GAAJ,CAAQ,KAAKR,IAAb,EAAmBK,GAAnB,EAAwBI,KAAxB;;AACA,WAAO,IAAP;AACH;;AAEDC,EAAAA,OAAO,CAACC,CAAD,EAAI;AACP,SAAK,IAAIN,GAAT,IAAgBM,CAAhB,EACIJ,aAAIC,GAAJ,CAAQ,KAAKR,IAAb,EAAmBK,GAAnB,EAAwBM,CAAC,CAACN,GAAD,CAAzB;;AACJ,WAAO,IAAP;AACH;;AAEDO,EAAAA,OAAO,CAACC,KAAK,GAAG,EAAT,EAAa;AAChB,WAAO,mBAAKA,KAAL,EAAY,KAAKb,IAAjB,CAAP;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKd,IAAZ;AACH;;AAEKe,EAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,UAAI,KAAI,CAACb,EAAL,KAAY,IAAhB,EAAsB;AAAE;AACpB,cAAMW,KAAK,GAAG,EAAd;AACAA,QAAAA,KAAK,CAAC,KAAI,CAACZ,MAAL,CAAYe,iBAAZ,EAAD,CAAL,GAAyC,KAAI,CAACf,MAAL,CAAYgB,gBAAZ,CAA6B,KAAI,CAACf,EAAlC,CAAzC;AACA,cAAMgB,GAAG,SAAS,KAAI,CAACjB,MAAL,CAAYkB,MAAZ,CACd,KAAI,CAACpB,UAAL,CAAgBqB,IADF,EAEdP,KAFc,QAGR,KAAI,CAACd,UAAL,CAAgBsB,QAAhB,CAAyB,KAAI,CAACrB,IAA9B,CAHQ,CAAlB;AAKH,OARD,MAQO;AAAE;AACL,cAAMkB,GAAG,SAAS,KAAI,CAACjB,MAAL,CAAYqB,MAAZ,CACd,KAAI,CAACvB,UAAL,CAAgBqB,IADF,QAER,KAAI,CAACrB,UAAL,CAAgBsB,QAAhB,CAAyB,KAAI,CAACrB,IAA9B,CAFQ,CAAlB;AAIA,QAAA,KAAI,CAACE,EAAL,GAAU,KAAI,CAACD,MAAL,CAAYsB,aAAZ,CAA0BL,GAA1B,CAAV;AACA,QAAA,KAAI,CAAClB,IAAL,CAAUE,EAAV,GAAe,KAAI,CAACA,EAApB;;AAEA,QAAA,KAAI,CAACH,UAAL,CAAgByB,UAAhB,CAA2B,KAA3B;AACH;;AAED,aAAO,IAAP;AApBS;AAqBZ;;AAEKC,EAAAA,MAAM,GAAG;AAAA;;AAAA;AACX,UAAI,MAAI,CAACvB,EAAL,KAAY,IAAhB,EACI,OAAO,KAAP;AAEJ,YAAMW,KAAK,GAAG,EAAd;AACAA,MAAAA,KAAK,CAAC,MAAI,CAACZ,MAAL,CAAYe,iBAAZ,EAAD,CAAL,GAAyC,MAAI,CAACf,MAAL,CAAYgB,gBAAZ,CAA6B,MAAI,CAACf,EAAlC,CAAzC;;AAEA,YAAMH,UAAU,GAAG,MAAI,CAACI,aAAL,EAAnB;;AACA,YAAMe,GAAG,SAAS,MAAI,CAACjB,MAAL,CAAYwB,MAAZ,CACd,MAAI,CAAC1B,UAAL,CAAgBqB,IADF,EAEdP,KAFc,CAAlB;AAKAd,MAAAA,UAAU,CAAC2B,eAAX,CAA2B,MAAI,CAACxB,EAAhC;AAEA,MAAA,MAAI,CAACA,EAAL,GAAU,IAAV;AACA,aAAOgB,GAAP;AAhBW;AAiBd;;AA3EsB","sourcesContent":["import sift from 'sift'\r\nimport Dot from './Tools/Dot'\r\n\r\nexport default class Model {\r\n    constructor(collection, data) {\r\n        this.collection = collection\r\n        this.driver = collection.driver\r\n        this.data = data\r\n        this.id = data.id ?? null\r\n    }\r\n\r\n    getCollection() {\r\n        return this.collection\r\n    }\r\n\r\n    get(key, defaultValue = null) {\r\n        return Dot.get(this.data, key) ?? defaultValue\r\n    }\r\n\r\n    set(key, value) {\r\n        Dot.set(this.data, key, value)\r\n        return this\r\n    }\r\n\r\n    setMany(o) {\r\n        for (let key in o)\r\n            Dot.set(this.data, key, o[key])\r\n        return this\r\n    }\r\n\r\n    matches(query = {}) {\r\n        return sift(query)(this.data)\r\n    }\r\n\r\n    export() {\r\n        return this.data\r\n    }\r\n\r\n    async save() {\r\n        if (this.id !== null) { // Update\r\n            const query = {}\r\n            query[this.driver.getPrimaryKeyName()] = this.driver.formatPrimaryKey(this.id)\r\n            const ret = await this.driver.update(\r\n                this.collection.name,\r\n                query,\r\n                await this.collection.formatIn(this.data)\r\n            )\r\n        } else { // Insert\r\n            const ret = await this.driver.insert(\r\n                this.collection.name,\r\n                await this.collection.formatIn(this.data)\r\n            )\r\n            this.id = this.driver.getPrimaryKey(ret)\r\n            this.data.id = this.id\r\n\r\n            this.collection.addToCache(this)\r\n        }\r\n        \r\n        return true\r\n    }\r\n\r\n    async delete() {\r\n        if (this.id === null)\r\n            return false\r\n        \r\n        const query = {}\r\n        query[this.driver.getPrimaryKeyName()] = this.driver.formatPrimaryKey(this.id)\r\n\r\n        const collection = this.getCollection()\r\n        const ret = await this.driver.delete(\r\n            this.collection.name,\r\n            query\r\n        )\r\n\r\n        collection.removeFromCache(this.id)\r\n        \r\n        this.id = null\r\n        return ret\r\n    }\r\n}"],"file":"Model.js"}