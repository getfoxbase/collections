{"version":3,"sources":["../src/Collection.js"],"names":["collections","Collection","constructor","name","opts","trim","fields","driver","cache","length","Error","Object","keys","create","type","get","createDocument","initialValues","Model","formatIn","input","formatOut","doc","withId","findById","id","find","query","updateById","data","deleteById"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,MAAMA,WAAW,GAAG,EAApB;AAEA;AACA;AACA;;AACe,MAAMC,UAAN,CAAiB;AAC5B;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAa;AAAA;;AACpB,SAAKD,IAAL,GAAY,CAAC,CAACA,IAAD,aAACA,IAAD,cAACA,IAAD,GAAS,EAAT,IAAe,EAAhB,EAAoBE,IAApB,EAAZ;AACA,SAAKC,MAAL,mBAAcF,IAAI,CAACE,MAAnB,uDAA6B,EAA7B;AACA,SAAKC,MAAL,mBAAcH,IAAI,CAACG,MAAnB,uDAA6B,IAA7B;AACA,SAAKC,KAAL,GAAa,EAAb;;AAEA,QAAI,KAAKL,IAAL,CAAUM,MAAV,KAAqB,CAAzB,EAA4B;AACxB,YAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;;AAED,QAAIC,MAAM,CAACC,IAAP,CAAY,KAAKN,MAAjB,EAAyBG,MAAzB,KAAoC,CAAxC,EAA2C;AACvC,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,QAAI,KAAKH,MAAL,KAAgB,IAApB,EAA0B;AACtB,YAAM,IAAIG,KAAJ,CAAU,iBAAV,CAAN;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACiB,SAANG,MAAM,CAACV,IAAD,EAAOC,IAAP,EAAaU,IAAb,EAAmB;AAC5Bd,IAAAA,WAAW,CAACG,IAAD,CAAX,GAAoB,IAAIW,IAAJ,CAASX,IAAT,EAAeC,IAAf,CAApB;AAEA,WAAOJ,WAAW,CAACG,IAAD,CAAlB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACc,SAAHY,GAAG,CAACZ,IAAD,EAAO;AAAA;;AACb,gCAAOH,WAAW,CAACG,IAAD,CAAlB,iEAA4B,IAA5B;AACH;;AAEKa,EAAAA,cAAc,CAACC,aAAa,GAAG,EAAjB,EAAqB;AAAA;;AAAA;AACrC,aAAO,IAAIC,cAAJ,CAAU,KAAV,EAAgBD,aAAhB,CAAP;AADqC;AAExC;;AAEKE,EAAAA,QAAQ,CAACC,KAAD,EAAQd,MAAM,GAAG,IAAjB,EAAuB;AAAA;AACjC,YAAM,IAAII,KAAJ,CAAU,6DAAV,CAAN;AADiC;AAEpC;;AAEKW,EAAAA,SAAS,CAACC,GAAD,EAAMhB,MAAM,GAAG,IAAf,EAAqBiB,MAAM,GAAG,IAA9B,EAAoC;AAAA;AAC/C,YAAM,IAAIb,KAAJ,CAAU,8DAAV,CAAN;AAD+C;AAElD;;AAEKc,EAAAA,QAAQ,CAACC,EAAD,EAAK;AAAA;AACf,YAAM,IAAIf,KAAJ,CAAU,6DAAV,CAAN;AADe;AAElB;;AAEKgB,EAAAA,IAAI,CAACC,KAAK,GAAG,EAAT,EAAa;AAAA;AACnB,YAAM,IAAIjB,KAAJ,CAAU,yDAAV,CAAN;AADmB;AAEtB;;AAEKkB,EAAAA,UAAU,CAACH,EAAD,EAAKI,IAAL,EAAW;AAAA;AACvB,YAAM,IAAInB,KAAJ,CAAU,+DAAV,CAAN;AADuB;AAE1B;;AAEKoB,EAAAA,UAAU,CAACL,EAAD,EAAK;AAAA;AACjB,YAAM,IAAIf,KAAJ,CAAU,+DAAV,CAAN;AADiB;AAEpB;;AAEKG,EAAAA,MAAM,CAACgB,IAAD,EAAO;AAAA;AACf,YAAM,IAAInB,KAAJ,CAAU,2DAAV,CAAN;AADe;AAElB;;AA9E2B","sourcesContent":["import Model from './Model'\r\n\r\nconst collections = {}\r\n\r\n/**\r\n * Handles a collection.\r\n */\r\nexport default class Collection {\r\n    /**\r\n     * Creates a collection object, according to the configuration.\r\n     * \r\n     * @param {string} name Collection name\r\n     * @param {object} opts Options\r\n     */\r\n    constructor(name, opts) {\r\n        this.name = ((name ?? '') + '').trim()\r\n        this.fields = opts.fields ?? {}\r\n        this.driver = opts.driver ?? null\r\n        this.cache = []\r\n\r\n        if (this.name.length === 0) {\r\n            throw new Error('Missing collection name.')\r\n        }\r\n\r\n        if (Object.keys(this.fields).length === 0) {\r\n            throw new Error('Missing fields.')\r\n        }\r\n\r\n        if (this.driver === null) {\r\n            throw new Error('Missing driver.')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a collection, and caches the configuration.\r\n     * \r\n     * @param {string} name Collection name\r\n     * @param {object} opts Options\r\n     */\r\n    static create(name, opts, type) {\r\n        collections[name] = new type(name, opts)\r\n\r\n        return collections[name]\r\n    }\r\n\r\n    /**\r\n     * Retrieves an existing collection, or returns null.\r\n     * \r\n     * @param {string} name Collection name\r\n     * @returns Collection\r\n     */\r\n    static get(name) {\r\n        return collections[name] ?? null\r\n    }\r\n\r\n    async createDocument(initialValues = {}) {\r\n        return new Model(this, initialValues)\r\n    }\r\n\r\n    async formatIn(input, fields = null) {\r\n        throw new Error('Method formatIn not implemented on current collection type.')\r\n    }\r\n\r\n    async formatOut(doc, fields = null, withId = true) {\r\n        throw new Error('Method formatOut not implemented on current collection type.')\r\n    }\r\n\r\n    async findById(id) {\r\n        throw new Error('Method findById not implemented on current collection type.')\r\n    }\r\n\r\n    async find(query = {}) {\r\n        throw new Error('Method find not implemented on current collection type.')\r\n    }\r\n\r\n    async updateById(id, data) {\r\n        throw new Error('Method updateById not implemented on current collection type.')\r\n    }\r\n\r\n    async deleteById(id) {\r\n        throw new Error('Method deleteById not implemented on current collection type.')\r\n    }\r\n\r\n    async create(data) {\r\n        throw new Error('Method create not implemented on current collection type.')\r\n    }\r\n}"],"file":"Collection.js"}